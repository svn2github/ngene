// HDR bright pass filter pixel shader
// Copyright (C) Wojciech Toman 2008

sampler sceneTex: register(s0);
sampler lumTex: register(s1);

struct VertexOutput
{
	float4 hPosition  : POSITION0;
    float2 texCoord   : TEXCOORD0;
};

float key_value = 0.58f;
float threshold = 5.0f;
float offset = 10.0f;

float iteration = 0.0f;

half4 main(VertexOutput IN): COLOR
{
    float4 sample = tex2D(sceneTex, IN.texCoord);
	float luminance = tex2D(lumTex, float2(0.5f, 0.5f));
	
	// Determine what the pixel's value will be after tone-mapping occurs
	sample.rgb *= key_value / (luminance + 0.001f);
	
	// Subtract out dark pixels
	sample.rgb -= threshold;
	
	// Clamp to 0
	sample = max(sample, 0.0f);
	
	// Map the resulting value into the 0 to 1 range. Higher values for
	// BRIGHT_PASS_OFFSET will isolate lights from illuminated scene 
	// objects.
	sample.rgb /= (offset + sample);
    
	return sample;
}